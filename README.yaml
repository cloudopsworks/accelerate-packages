---
# 
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Cloud Ops Works Accelerate Packages

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud ops Works LLC"
    url: "https://cloudops.works"
    year: "2021"

# Canonical GitHub repo 
github_repo: cloudopsworks/tronador-packages

# Badges to display
badges:
  - name: "Build Status"
    image: "https://travis-ci.org/cloudopsworks/tronador.svg?branch=master"
    url: "https://travis-ci.org/cloudopsworks/tronador"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudopsworks/tronador.svg"
    url: "https://github.com/cloudopsworks/tronador/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudopsworks.com/badge.svg"
    url: "https://slack.cloudopsworks.com"

related:
  - name: "Packages"
    description: "Cloud Ops Works installer and distribution of native apps"
    url: "https://github.com/cloudopsworks/tronador"
  - name: "Dev Harness"
    description: "Cloud Ops Works Local Development Harness"
    url: "https://github.com/cloudopsworks/dev"

# References
references:
  - name: "Wikipedia - Test Harness"
    description: 'The `tronador` is similar in concept to a "Test Harness"'
    url: "https://en.wikipedia.org/wiki/Test_harness"

# Screenshots
screenshots:
  - name: "demo"
    description: "Example of using the `tronador` to build a docker image"
    url: "https://cdn.rawgit.com/cloudopsworks/tronador/master/docs/demo.svg"
 
# Short description of this project
description: |-
  This `tronador` is a collection of Makefiles to facilitate building Golang projects, Dockerfiles, Helm charts, and more.
  It's designed to work with CI/CD systems such as GitHub Actions, Codefresh, Travis CI, CircleCI and Jenkins.

# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this project
usage: |-
  At the top of your `Makefile` add, the following...

  ```make
  -include $(shell curl -sSL -o .tronador "https://cowk.io/acc"; echo .tronador)
  ```

  This will download a `Makefile` called `.tronador` and include it at run-time. We recommend adding the `.tronador` file to your `.gitignore`.

  This automatically exposes many new targets that you can leverage throughout your build & CI/CD process.

  Run `make help` for a list of available targets.

  **NOTE:** the `/` is interchangable with the `:` in target names

  ## GitHub Actions
  
  The `tronador` is compatible with [GitHub Actions](https://github.com/features/actions).

  Here's an example of running `make readme/lint` 

  ```
  name: tronador/readme/lint
  on: [pull_request]
  jobs:
    build:
      name: 'Lint README.md'
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - uses: cloudopsworks/tronador@master
        with:
          entrypoint: /usr/bin/make
          args: readme/lint
   ```

# Example usage
# examples: |-
#   Here are some real world examples:
#   - [`github-authorized-keys`](https://github.com/cloudopsworks/github-authorized-keys/) - A Golang project that leverages `docker/%`, `go/%`, `travis/%` targets
#   - [`charts`](https://github.com/cloudopsworks/charts/) - A collection of Helm Charts that leverages `docker/%` and `helm/%` targets
#   - [`bastion`](https://github.com/cloudopsworks/bastion/) - A docker image that leverages `docker/%` and `bash/lint` targets
#   - [`terraform-null-label`](https://github.com/cloudopsworks/terraform-null-label/) - A terraform module that leverages `terraform/%` targets

# How to get started quickly
quickstart: |-
  Here's how to get started...

  1. `git clone https://github.com/cloudopsworks/tronador.git` to pull down the repository
  2. `make init` to initialize the [`tronador`](https://github.com/cloudopsworks/tronador/)

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"

# Contributors to this project
contributors:
  - name: "Cristian Beraha"
    github: "berahac"
